name: Build and Deploy Services

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
      - 'api/**'

env:
  REGISTRY: ghcr.io

jobs:
  list-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.list.outputs.services }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ðŸ‘ˆ Needed to compare commits
      - name: Determine changed services
        id: list
        run: |
          # Compare current commit with previous one on main
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$changed_files"

          services=()
          for path in $changed_files; do
            if [[ $path == front/* ]]; then
              services+=("\"front\"")
            elif [[ $path == api/* ]]; then
              services+=("\"api\"")
            fi
          done

          # Remove duplicates and output JSON array
          unique_services=$(echo "${services[@]}" | tr ' ' '\n' | sort -u | jq -cs '.')
          echo "services=$unique_services" >> $GITHUB_OUTPUT

  build:
    needs: list-services
    if: needs.list-services.outputs.services != '[]'
    strategy:
      matrix:
        service: ${{ fromJson(needs.list-services.outputs.services) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}
      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
