import type { Metadata } from "next";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import { ThemeProvider } from "@mui/material/styles";
import { Roboto } from "next/font/google";
import theme from "../theme";
import "./globals.css";
// using react-i18next providers via next-i18next config; do not wrap app with appWithTranslation in app dir
import { LanguageSwitcher } from './components/LanguageSwitcher';
// Client i18n bootstrap removed: prefer Next.js locale routing and server-side
// helpers. Use `src/lib/i18nServer.ts` to load locale dictionaries in server
// components when needed.
import SessionClientProvider from './providers/SessionClientProvider';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import type { Session } from 'next-auth';
import ToastContainer from "./components/ToastContainer";
import { ToastProvider } from "@/lib/hooks/useToast";

// Charger la font Roboto via next/font
const roboto = Roboto({
  weight: ["300", "400", "500", "700"],
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  const session = (await getServerSession(authOptions as any)) as Session | null;

  return (
    <html lang="en" className={roboto.variable} suppressHydrationWarning>
      <body>
        <SessionClientProvider session={session}>
          <AppRouterCacheProvider options={{ enableCssLayer: true }}>
            <ThemeProvider theme={theme}>
              <ToastProvider>
                {children}
                <ToastContainer />
              </ToastProvider>
            </ThemeProvider>
          </AppRouterCacheProvider>
        </SessionClientProvider>
      </body>
    </html>
  );
}

export default RootLayout;
